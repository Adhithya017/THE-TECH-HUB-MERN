name: CI/CD Pipeline for Fusion Electronics App

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  workflow_dispatch:

jobs:
  formatting:
    name: "🔧 Install, Lint & Format"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Use Node.js 18
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install dependencies (root)
        run: npm install

      - name: Run Prettier
        run: npm run format

  backend:
    name: "✅ Backend Tests"
    needs: formatting
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Use Node.js 18
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install & Test Backend
        working-directory: backend
        run: |
          npm install
          npm test

  frontend:
    name: "🌐 Frontend Tests"
    runs-on: ubuntu-latest
    needs: formatting
    strategy:
      matrix:
        node-version: [18]
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install & Test Frontend
        run: |
          npm install
          npm test

  recommendation-tests:
    name: "🤖 Recommendation Service Sanity"
    runs-on: ubuntu-latest
    needs: formatting
    strategy:
      matrix:
        threshold: [0.1, 0.5, 0.9]
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Use Node.js 18
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install & Test Recommendation Service
        working-directory: backend
        run: |
          npm install
          echo "🔍 Testing recommendation pipeline with threshold ${{ matrix.threshold }}"
          node scripts/test-recommendations.js --threshold ${{ matrix.threshold }}

  complete:
    name: "🎉 All Tests Passed"
    runs-on: ubuntu-latest
    needs:
      - backend
      - frontend
      - recommendation-tests
    steps:
      - name: Notify success
        run: echo "✅ Backend, frontend, and recommendation tests all passed."

  docker:
    name: "🐳 Build & Push Docker Images"
    runs-on: ubuntu-latest
    needs: complete
    permissions:
      contents: read
      packages: write   # for GHCR
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build & push backend image
        uses: docker/build-push-action@v3
        with:
          context: ./backend
          file: ./backend/Dockerfile
          push: true
          tags: |
            ghcr.io/${{ github.repository_owner }}/mern-ecom-backend:${{ github.sha }}
            ghcr.io/${{ github.repository_owner }}/mern-ecom-backend:latest

      - name: Build & push frontend image
        uses: docker/build-push-action@v3
        with:
          context: ./
          file: ./Dockerfile
          push: true
          tags: |
            ghcr.io/${{ github.repository_owner }}/mern-ecom-frontend:${{ github.sha }}
            ghcr.io/${{ github.repository_owner }}/mern-ecom-frontend:latest

  summary:
    name: "📝 Pipeline Summary"
    runs-on: ubuntu-latest
    needs:
      - docker
    steps:
      - name: Display summary
        run: |
          echo "::group::CI/CD Pipeline Summary"
          echo "::notice::🔧 Formatting: ✅"
          echo "::notice::✅ Backend Tests (multi-OS): ✅"
          echo "::notice::🌐 Frontend Tests: ✅"
          echo "::notice::🤖 Recommendation Tests: ✅"
          echo "::notice::🐳 Docker Build & Push: ✅"
          echo "::endgroup::"
          echo "::success::🎉 Pipeline complete successfully!"
